basePath: /
definitions:
  handler.HTTPError:
    properties:
      message: {}
    type: object
  handler.Message:
    properties:
      data:
        example: John Doe
        type: string
    type: object
  handler.User:
    properties:
      company:
        example: Acme Inc.
        type: string
      email:
        example: johndoe@gmail.com
        type: string
      id:
        example: 1
        type: integer
      interests:
        example:
        - golang
        - python
        items:
          type: string
        type: array
      name:
        example: John Doe
        type: string
    type: object
host: localhost:7999
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Echo Swagger Example API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
  /api/v1/users:
    get:
      consumes:
      - '*/*'
      description: get all users matching given query params. returns all by default.
      parameters:
      - description: interests to filter by
        in: query
        name: interest
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.User'
            type: array
      summary: Get all users
      tags:
      - API
  /api/v1/users/{id}:
    get:
      consumes:
      - '*/*'
      description: get user matching given ID.
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Get user by id
      tags:
      - API
  /auth/test:
    get:
      consumes:
      - '*/*'
      description: get user info from the JWT token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Message'
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Get user info from the JWT token
      tags:
      - authenticated
schemes:
- http
swagger: "2.0"
